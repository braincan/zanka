# Makefile.in

abs_top_srcdir	= @abs_top_srcdir@
datarootdir		= @datarootdir@
exec_prefix		= @exec_prefix@
fake_prefix		= @fake_prefix@
installdir		= $(prefix)/$(trackerddir)
objdir			= @objdir@
rundir			= @rundir@
mandir			= @mandir@
prefix			= @prefix@
trackerddir		= @trackerddir@

WT_VERSION		= @WT_VERSION@
WT_MAINTAINER	= @WT_MAINTAINER@
WT_USER			= @WT_USER@
WT_GROUP		= @WT_GROUP@

DISTFILES		= INSTALL LICENSE NEWS README Makefile Makefile.in \
				  config.guess config.status config.h.in config.sub configure \
				  configure.in install-sh libwired man run trackerd
SUBDIRS			= libwired

TRACKERDOBJECTS	= $(addprefix $(objdir)/trackerd/,$(notdir $(patsubst %.c,%.o,$(shell find $(abs_top_srcdir)/trackerd -name "[a-z]*.c"))))

DEFS            = @DEFS@ -DWT_ROOT="\"$(fake_prefix)/$(trackerddir)\""
CC              = @CC@
CFLAGS          = @CFLAGS@
CPPFLAGS        = @CPPFLAGS@
LDFLAGS         = -L$(rundir)/libwired/lib @LDFLAGS@
LIBS			= -lwired @LIBS@
INCLUDES        = -I$(abs_top_srcdir) -I$(rundir)/libwired/include

INSTALL			= @INSTALL@
COMPILE         = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
PREPROCESS      = $(CC) -E $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
DEPEND          = $(CC) -MM $(INCLUDES)
LINK            = $(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
ARCHIVE         = ar rcs $@

.PHONY: all all-recursive clean-recursive distclean-recursive install install-only install-trackerd install-man dist clean distclean scmclean
.NOTPARALLEL:

all: all-recursive $(rundir)/trackerd $(rundir)/trackerdctl $(rundir)/etc/trackerd.conf

ifeq ($(WT_MAINTAINER), 1)
all: Makefile configure config.h.in

Makefile: Makefile.in config.status
	./config.status
	    
configure: configure.in
	autoconf

config.h.in: configure.in
	autoheader
	touch $@
	rm -f $@~
endif

all-recursive clean-recursive distclean-recursive:
	@list='$(SUBDIRS)'; \
	for subdir in $$list; do \
		target=`echo $@ | sed s/-recursive//`; \
		(cd $$subdir && $(MAKE) -e $$target) || exit 1; \
	done

$(rundir)/trackerd: $(TRACKERDOBJECTS) $(rundir)/libwired/lib/libwired.a
	@test -d $(@D) || mkdir -p $(@D)
	$(LINK) $(TRACKERDOBJECTS) $(LIBS)

$(rundir)/trackerdctl: $(abs_top_srcdir)/trackerd/trackerdctl.in
	@test -d $(@D) || mkdir -p $(@D)
	sed -e 's,@trackerddir\@,$(fake_prefix)/$(trackerddir),g' $< > $@
	chmod +x $@

$(rundir)/etc/trackerd.conf: $(abs_top_srcdir)/trackerd/trackerd.conf.in
	@test -d $(@D) || mkdir -p $(@D)
	sed -e 's,@WT_USER\@,$(WT_USER),g' -e 's,@WT_GROUP\@,$(WT_GROUP),g' $< > $@

$(objdir)/trackerd/%.o: $(abs_top_srcdir)/trackerd/%.c
	@test -d $(@D) || mkdir -p $(@D)
	$(COMPILE) -I$(<D) -c $< -o $@

$(objdir)/trackerd/%.d: $(abs_top_srcdir)/trackerd/%.c
	@test -d $(@D) || mkdir -p $(@D)
	($(DEPEND) $< | sed 's,$*.o,$(@D)/&,g'; echo "$@: $<") > $@

install: all install-man install-trackerd

install-only: install-man install-trackerd

install-trackerd:
	@if [ -e $(installdir)/trackerd ]; then \
		touch .update; \
	fi

	$(INSTALL) -m 755 -o $(WT_USER) -g $(WT_GROUP) -d $(installdir)/
	$(INSTALL) -m 755 -o $(WT_USER) -g $(WT_GROUP) -d $(installdir)/etc/
	$(INSTALL) -m 755 -o $(WT_USER) -g $(WT_GROUP) -d $(installdir)/tmp/

	if [ ! -f $(installdir)/banlist ]; then \
		$(INSTALL) -m 644 -o $(WT_USER) -g $(WT_GROUP) $(rundir)/banlist $(installdir)/; \
	fi

	if [ ! -f $(installdir)/categories ]; then \
		$(INSTALL) -m 644 -o $(WT_USER) -g $(WT_GROUP) $(rundir)/categories $(installdir)/; \
	fi

	if [ ! -f $(installdir)/etc/trackerd.conf ]; then \
		$(INSTALL) -m 644 -o $(WT_USER) -g $(WT_GROUP) $(rundir)/etc/trackerd.conf $(installdir)/etc/; \
	fi
	
	$(INSTALL) -m 755 -o $(WT_USER) -g $(WT_GROUP) $(rundir)/trackerd $(installdir)/
	$(INSTALL) -m 755 -o $(WT_USER) -g $(WT_GROUP) $(rundir)/trackerdctl $(installdir)/

	if [ -f /etc/resolv.conf ]; then \
		$(INSTALL) -m 644 -o $(WT_USER) -g $(WT_GROUP) /etc/resolv.conf $(installdir)/etc/; \
	fi

	@if [ -f .update ]; then \
		echo ""; \
		echo "Update complete!"; \
		echo ""; \
		echo "You should now run:"; \
		echo "    $(installdir)/trackerdctl restart"; \
		echo "to restart a running tracker."; \
	else \
		echo ""; \
		echo "Installation complete!"; \
		echo ""; \
		echo "Remember to edit $(installdir)/etc/trackerd.conf if you want to make any changes before starting the tracker."; \
		echo ""; \
		echo "When you are done, run:"; \
		echo "    $(installdir)/trackerdctl start"; \
		echo "to start the tracker."; \
	fi
	
	@rm -f .update

install-man:
	$(INSTALL) -m 755 -d $(mandir)/man1/
	$(INSTALL) -m 644 $(abs_top_srcdir)/man/trackerdctl.1 $(mandir)/man1/
	$(INSTALL) -m 755 -d $(mandir)/man5/
	$(INSTALL) -m 644 $(abs_top_srcdir)/man/trackerd.conf.5 $(mandir)/man5/
	$(INSTALL) -m 755 -d $(mandir)/man8/
	$(INSTALL) -m 644 $(abs_top_srcdir)/man/trackerd.8 $(mandir)/man8/

dist:
	rm -rf wiredtracker-$(WT_VERSION)
	rm -f wiredtracker-$(WT_VERSION).tar.gz
	mkdir wiredtracker-$(WT_VERSION)

	@for i in $(DISTFILES); do \
		if [ -e $$i ]; then \
			echo cp -LRp $$i wiredtracker-$(WT_VERSION)/$$i; \
			cp -LRp $$i wiredtracker-$(WT_VERSION)/$$i; \
		fi \
	done
	
	$(SHELL) -ec "cd wiredtracker-$(WT_VERSION) && WT_MAINTAINER=0 WI_MAINTAINER=0 $(MAKE) -e distclean scmclean"

	tar -czf wiredtracker-$(WT_VERSION).tar.gz wiredtracker-$(WT_VERSION)
	rm -rf wiredtracker-$(WT_VERSION)

clean: clean-recursive
	rm -f $(objdir)/trackerd/*.o
	rm -f $(objdir)/trackerd/*.d
	rm -f $(rundir)/trackerd
	rm -f $(rundir)/trackerdctl
	rm -f $(rundir)/etc/trackerd.conf
	rm -rf autom4te.cache

distclean: clean distclean-recursive
	rm -rf $(objdir)
	rm -f Makefile config.h config.log config.status
	rm -f wired-tracker-$(WT_VERSION).tar.gz

scmclean:
	find . -name .DS_Store -print0 | xargs -0 rm -f
	find . -name CVS -print0 | xargs -0 rm -rf
	find . -name .svn -print0 | xargs -0 rm -rf

ifeq ($(WT_MAINTAINER), 1)
-include $(TRACKERDOBJECTS:.o=.d)
endif
